<?xml version="1.0" encoding="UTF-8" standalone="no"?><xmap-revision-content xmlns="urn:xmind:xmap:xmlns:revision:1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink"><sheet id="5uu5nue742a7v0r2ph9sv2dbot" modified-by="" style-id="7fkp7h7d2rra9h00spf20rci7u" theme="xminddefaultthemeid" timestamp="1513156755567"><topic id="1frhv5htcvi53b1l324cdbb32m" modified-by="" structure-class="org.xmind.ui.map.unbalanced" timestamp="1513156755567"><title>Optional类</title><extensions><extension provider="org.xmind.ui.map.unbalanced"><content><right-number>1</right-number></content></extension></extensions><children><topics type="attached"><topic id="27kc34cq231p0qd2ki264fupga" modified-by="" timestamp="1513156730039" xmlns="urn:xmind:xmap:xmlns:content:2.0"><title>java.util.Optional&lt;T&gt;</title><children><topics type="attached"><topic id="3msi6tccrg40eajtb61io5vc70" modified-by="" timestamp="1508464714537"><title>尽量避免空指针</title></topic><topic id="2hkjpjc87o4dvifeep87ns7mn9" modified-by="" timestamp="1508464810440"><title>1、创建Optional对象</title><children><topics type="attached"><topic id="34u963qshd78knkh0dkmg1798q" modified-by="" timestamp="1508464761061"><title>（1）创建一个空Optional</title><children><topics type="attached"><topic id="3ehhh78300ic2u2k2sqq30kjbc" modified-by="" timestamp="1508464768725"><title>Optional.empty()</title></topic></topics></children></topic><topic id="0f99nbm4khouvko5m00482vunc" modified-by="" timestamp="1508464787000"><title>（2）创建一个包装了对象的Optional</title><children><topics type="attached"><topic id="5v1ublnjusqvb7cud467f6hqrn" modified-by="" timestamp="1508464799535"><title>Optional.of(obj)</title><children><topics type="attached"><topic id="02fl2a5m4u7oojj1s8oe1vm20m" modified-by="" timestamp="1508464809658"><title>obj必须是非空，否则异常</title></topic></topics></children></topic></topics></children></topic><topic id="6pp514msmk3h31rkequa6eil69" modified-by="" timestamp="1508464826256"><title>（3）创建一个包装对象可能为空的Optional</title><children><topics type="attached"><topic id="3rgt1dgc41m3hj2vr6hn0g7k54" modified-by="" timestamp="1508464836512"><title>Optional.ofNullable(obj)</title><children><topics type="attached"><topic id="25733p7o4pc1s1sasv0il2g2kv" modified-by="" timestamp="1508464840731"><title>obj可能为空</title></topic></topics></children></topic></topics></children></topic></topics></children></topic><topic id="7eu99df9ppsapnhm36lla7hu2r" modified-by="" timestamp="1508465040138"><title>2、获取包装的对象</title><children><topics type="attached"><topic id="7ugj61sqs5j7jlf7ma5lao050j" modified-by="" timestamp="1508464857483"><title>（1）get()</title><children><topics type="attached"><topic id="40p0012s71jbp2dln7n86a8sul" modified-by="" timestamp="1508464880897"><title svg:width="500">如果Optional包装的对象不为空，正常返回，如果为空，报异常</title></topic></topics></children></topic><topic id="7m43rnahatqvablovkr4mkbdjc" modified-by="" timestamp="1508464951940"><title>（2）orElse(T other)</title><children><topics type="attached"><topic id="4cafed5obp95sadqk54du718hr" modified-by="" timestamp="1508464956728"><title svg:width="500">如果Optional包装的对象不为空，正常返回，如果为空，返回other对象</title></topic></topics></children></topic><topic id="4h5r33u25eklqco16nu3c14dis" modified-by="" timestamp="1508464991513"><title>（3）orElseGet(Supplier)</title><children><topics type="attached"><topic id="12mj2uhsqccj63fjjailtfke2p" modified-by="" timestamp="1508464990641"><title svg:width="500">如果Optional包装的对象不为空，正常返回，如果为空，返回由供给型接口提供的对象</title></topic><topic id="17nji60btj603igmn5jhv2g5s3" modified-by="" timestamp="1508465016127"><title>Supplier接口：T  get()</title></topic></topics></children></topic><topic id="43843odhet4fk6tpfoiahjck7l" modified-by="" timestamp="1508465050285"><title svg:width="500">（4）orElseThrow(Supplier&lt;? extends X&gt; exceptionSupplier)</title><children><topics type="attached"><topic id="47pprqv6mftrtvlmdqq97dak73" modified-by="" timestamp="1508465068871"><title svg:width="500">如果Optional包装的对象不为空，正常返回，如果为空，报异常，报的异常是由Supplier提供的异常对象</title></topic></topics></children></topic></topics></children></topic><topic id="56nhkn2639fenb5toc87aaalvd" modified-by="" timestamp="1508465144982"><title>3、是否存在</title><children><topics type="attached"><topic id="3f7cpoq3kmq2r8bdhf8jsf8lmg" modified-by="" timestamp="1508465121806"><title>（1）boolean isPresent()</title><children><topics type="attached"><topic id="5naam0nl7le36rudaglqp1jma2" modified-by="" timestamp="1508465143899"><title svg:width="500">表示判断Optional中的包装的对象是否存在，如果存在就返回true，否则就是false</title></topic></topics></children></topic><topic id="0lagvspcr1765pqj1l5cp7o1e5" modified-by="" timestamp="1508465202374"><title svg:width="500">（2）ifPresent(Consumer&lt;? super T&gt; consumer) </title><children><topics type="attached"><topic id="4ids58n0vl6pfi942kcshoig2v" modified-by="" timestamp="1508465189403"><title svg:width="500">如果存在，就执行Consoumer指定的操作，如果不存在就不做</title></topic><topic id="51bssvl53u883isomh04q1bg8h" modified-by="" timestamp="1508465218791"><title>Consumer： void accept(T t)</title></topic></topics></children></topic></topics></children></topic><topic id="2cc2sr3kbkl55sanbl539v8694" modified-by="" timestamp="1508465244787"><title>4、过滤</title><children><topics type="attached"><topic id="5gsnc8m8n21asb7d6ipktsonle" modified-by="" timestamp="1508465249451"><title svg:width="500">Optional&lt;T&gt; filter(Predicate&lt;? super T&gt; predicate)  </title><children><topics type="attached"><topic id="5bom3lg4ms20eliklmseolmtvq" modified-by="" timestamp="1508465287891"><title svg:width="500">对Optional中包装的对象进行过滤，按照Predicate的条件进行判断，如果满足，返回它，如果不满足，返回empty的Optional</title></topic></topics></children></topic></topics></children></topic><topic id="6jp01mncjj2kjbvloo404sp94r" modified-by="" timestamp="1508465332257"><title>5、映射</title><children><topics type="attached"><topic id="59qo465f1v9iquph0q3pnrus7o" modified-by="" timestamp="1508465337674"><title svg:width="500">&lt;U&gt; Optional&lt;U&gt; map(Function&lt;? super T,? extends U&gt; mapper) </title><children><topics type="attached"><topic id="0e65dhhun4uvj7gos991hikth8" modified-by="" timestamp="1508465683326"><title svg:width="500">对Optional包装对象，执行Function中的apply方法，apply方法返回的结果可以是任意结果，map方法的结果，把apply方法的结果包装成一个Optional对象</title></topic></topics></children></topic><topic id="7lebqgrq20ok95uhhfrk2jjs2v" modified-by="" timestamp="1508465685341"><title svg:width="500">&lt;U&gt; Optional&lt;U&gt; flatMap(Function&lt;? super T,Optional&lt;U&gt;&gt; mapper)  </title><children><topics type="attached"><topic id="2p8q5uh60qrh3hesoch69c9uou" modified-by="" timestamp="1508465706722"><title svg:width="500">对Optional包装对象，执行Function中的apply方法，apply方法返回的结果是一个Optional，map方法的结果，把apply方法的结果直接返回</title></topic></topics></children></topic></topics></children></topic></topics></children></topic></topics></children></topic><title>Optional</title></sheet></xmap-revision-content>