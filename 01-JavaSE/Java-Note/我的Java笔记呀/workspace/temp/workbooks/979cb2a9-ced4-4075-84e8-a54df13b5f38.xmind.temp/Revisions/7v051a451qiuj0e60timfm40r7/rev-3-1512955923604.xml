<?xml version="1.0" encoding="UTF-8" standalone="no"?><xmap-revision-content xmlns="urn:xmind:xmap:xmlns:revision:1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink"><sheet id="7v051a451qiuj0e60timfm40r7" modified-by="" style-id="3482hp5csuf60d6r2su8h350er" theme="xminddefaultthemeid" timestamp="1512955921415"><topic id="0jh6ocu530vfag7v9k22itg740" modified-by="" structure-class="org.xmind.ui.logic.right" timestamp="1512955847406"><title>多线程</title><extensions><extension provider="org.xmind.ui.map.unbalanced"><content><right-number>-1</right-number></content></extension></extensions><children><topics type="attached"><topic id="1okhv2frtj48nhs8ijekrrm75q" modified-by="" timestamp="1512955578936"><title>概念</title><children><topics type="attached"><topic id="5svjjfbh9ff9djm8via0g7lfi5" modified-by="" timestamp="1512955584232"><title>程序</title><children><topics type="attached"><topic id="36crg0glo54cn0c5ofhnl2ukj9" modified-by="" timestamp="1512955630830"><title svg:width="500">为了完成某个任务或功能，选择某个编程语言而编写的一组代码指令的集合</title></topic></topics></children></topic><topic id="7q8udblrrvek36gem3gjko52jc" modified-by="" timestamp="1512955714723"><title>进程</title><children><topics type="attached"><topic id="33qebe12rgd3qje9qupo0fn5j4" modified-by="" timestamp="1512955768184"><title svg:width="500">程序的一次运行，是操作系统管理和调度的最小单位，每一个进程之间内存是相互独立的，如果进程之间要通信比较麻烦，可以通过文件，或网络通信方式等</title></topic></topics></children></topic><topic id="59qjikkeq268lp9q24haridn4u" modified-by="" timestamp="1512955772367"><title>线程</title><children><topics type="attached"><topic id="7442ufh5ebfhbvj2ccr718kui3" modified-by="" timestamp="1512955822823"><title svg:width="500">是进程中的其中一条执行路径，是CPU调度任务的最小单位</title><children><topics type="attached"><topic id="40fcbraruitd0sll9hs4fvfi9h" modified-by="" timestamp="1512955834503"><title>线程是共享同一个进程的内存</title></topic></topics></children></topic></topics></children></topic></topics></children></topic><topic id="060rclpn1qprqe0si8evo4m1tk" modified-by="" timestamp="1512955900759"><title>如何开启主线程以外的线程</title><children><topics type="attached"><topic id="0tcf3ehm1s0tp68rmdn7uqu780" modified-by="" timestamp="1512955889831"><title>方式一：继承java.lang.Thread类</title><children><topics type="attached"><topic id="25qhnkej0c6keko9uo9lofdhlt" modified-by="" timestamp="1512955892648"><title>步骤</title><children><topics type="attached"><topic id="2te1tbffj3tbcbcblpp4a7fggh" modified-by="" timestamp="1512955894097"><title>①继承Thread类&#13;
②重写public void run(){}&#13;
	编写线程体，即该线程需要完成的任务代码&#13;
③创建线程对象&#13;
④启动线程：线程对象.start();</title></topic></topics></children></topic></topics></children></topic><topic id="63cfk8m8rk1vs30dl9vh6t5cic" modified-by="" timestamp="1512955910981"><title>方式二：实现java.lang.Runnable接口</title><children><topics type="attached"><topic id="5a6eud203tqa7un71ilq0acmb8" modified-by="" timestamp="1512955919995"><title>步骤</title><children><topics type="attached"><topic id="1onrjkr6qtorikgtcmc94dtbo3" modified-by="" timestamp="1512955921415"><title>①实现java.lang.Runnable接口&#13;
②实现public void run(){}&#13;
	编写线程体，即该线程需要完成的任务代码&#13;
③创建线程对象&#13;
④启动线程：借助Thread类的对象&#13;
		new Thread(自定义线程对象).start();</title></topic></topics></children></topic></topics></children></topic></topics></children></topic></topics></children></topic><title>画布 14</title></sheet></xmap-revision-content>