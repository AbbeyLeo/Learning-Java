/**
 * @author Liu Awen Email:willowawen@gmail.com
 * @create 2020-05-17
 */
/*
变量的分类：
1、成员变量：今天讨论的都是非静态的成员变量
2、局部变量
成员变量
局部变量
（1）声明的位置不同
成员变量：
	类中方法外
	类{
		【修饰符】 数据类型  成员变量;
	}
	成员变量
局部变量
	方法中：（1）形参，也是局部变量（2）方法体{}中声明的变量
	后面可能还要加上代码块中。
	类{
		【修饰符】 返回值类型  方法名(【形参列表】){
			数据类型  局部变量;
		}
	}
（2）运行时在内存中的位置也不相同
成员变量：堆
局部变量：栈
局部变量 栈  成员变量 堆
运行时在内存中的位置也不相同
（3）初始化不同
成员变量：
	如果没有初始化，有默认值
局部变量：
	如果没有初始化，就会报错，不能用

（4）生命周期
成员变量：
	随着对象的创建而分配，随着对象被垃圾回收器回收而结束
	对象的创建而分配  随着对象被垃圾回收器回收而结束
局部变量：
	方法被调用，开始分配，方法执行结束就结束

（5）可用的修饰符
成员变量：有很多修饰符，具体哪些后面再讲
局部变量：唯一的一个就是final，具体什么意思再讲

*/
//成员变量 局部变量
class Test07_Variable{
    public static void main(String[] args){//args是局部变量
        String ming = "张三";//ming局部变量
        int nian = 23;//nian局部变量

        Student s1 = new Student();//s1局部变量
        s1.name = ming;//s1.name不是在这里声明的，只是使用它
        s1.age = nian;
    }
}
class Student{
    String name;//name是成员变量
    int age;//age是成员变量

    void set(String n, int a){//n和a是局部变量
        name = n;
        age = a;
    }
}